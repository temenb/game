services:
  db:
    container_name: game-db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  gateway:
    container_name: game-gateway
    build: services/gateway
    env_file:
      - services/gateway/.env
    ports:
      - "3000:3000"
    volumes:
      - ./services/gateway/:/usr/src/app/
      - /usr/src/app/node_modules
    command: npm run dev

  auth:
    container_name: game-auth
    build: services/auth
    env_file:
      - services/auth/.env
    volumes:
      - ./services/auth/:/usr/src/app/
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    command: npm run dev

  profile:
    container_name: game-profile
    build: services/profile
    env_file:
      - services/profile/.env
    volumes:
      - ./services/profile/:/usr/src/app/
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    command: npm run dev

  ship:
    container_name: game-ship
    build: services/ship
    env_file:
      - services/ship/.env
    volumes:
      - ./services/ship/:/usr/src/app/
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    command: npm run dev

  asteroid:
    container_name: game-asteroid
    build: services/asteroid
    env_file:
      - services/asteroid/.env
    volumes:
      - ./services/asteroid/:/usr/src/app/
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    command: npm run dev

  rabbitmq:
    image: rabbitmq:4.1.3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10


  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_WEBROOT : "/mailpit/"
#      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
      MP_SMTP_AUTH: "login:pass"
      MP_MAX_MESSAGES: 5000
    volumes:
      - /data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  rabbitmq-data:
