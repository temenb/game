syntax = "proto3";

package asteroid;

service Asteroid {

  rpc ListAsteroids(ListAsteroidsRequest) returns (ListAsteroidsResponse);
  rpc GetAsteroid(GetAsteroidRequest) returns (GetAsteroidResponse);
  rpc ListGalaxies(ListGalaxiesRequest) returns (ListGalaxiesResponse);

  rpc Health(Empty) returns (HealthReport);
  rpc Status(Empty) returns (StatusInfo);
  rpc Livez(Empty) returns (LiveStatus);
  rpc Readyz(Empty) returns (ReadyStatus);
}

message Empty {}

message HealthReport {
  map<string, string> components = 1; // "rabbitmq": "ok", "auth": "fail"
  bool healthy = 2;
}

message StatusInfo {
  string name = 1;
  string version = 2;
  double uptime = 4;
  string env = 5;
  string timestamp = 6;
}

message LiveStatus {
  bool live = 1;
}

message ReadyStatus {
  bool ready = 1;
}

message ListAsteroidsRequest {
  string user_id = 1;
  string galaxy_id = 2;
}

message ListAsteroidsResponse {
  repeated AsteroidObject asteroids = 1;
}

message AsteroidObject {
  string id = 1;
  AsteroidType type = 2;
  int32 x = 3;
  int32 y = 4;
  int32 hp = 5;
}

enum AsteroidType {
  UNKNOWN = 0;
  BASE = 1;
  ASTEROID = 2;
  PORTAL = 3;
}

message GetAsteroidRequest {
  string asteroid_id = 1;
}

message GetAsteroidResponse {
  AsteroidObject asteroid = 1;
}

message ListGalaxiesResponse {
  repeated Galaxy galaxies = 1;
}

message ListGalaxiesRequest {
  string user_id = 1;
}

message Galaxy {
  string id = 1;
}
