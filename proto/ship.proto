syntax = "proto3";

package ship;

service Ship {
  rpc ListShips(ListShipsRequest) returns (ListShipsResponse);
  rpc AttackAsteroid(AttackAsteroidRequest) returns (AttackAsteroidResponse);

  rpc Health(Empty) returns (HealthReport);
  rpc Status(Empty) returns (StatusInfo);
  rpc Livez(Empty) returns (LiveStatus);
  rpc Readyz(Empty) returns (ReadyStatus);
}

message Empty {}

message HealthReport {
  map<string, string> components = 1; // "rabbitmq": "ok", "auth": "fail"
  bool healthy = 2;
}

message StatusInfo {
  string name = 1;
  string version = 2;
  string build = 3;
  double uptime = 4;
  string env = 5;
  string timestamp = 6;
}

message LiveStatus {
  bool live = 1;
}

message ReadyStatus {
  bool ready = 1;
}

message ListShipsRequest {
  string player_id = 1;
}

message ListShipsResponse {
  repeated ShipObject ships = 1;
}

message ShipObject {
  string id = 1;
  int32 x = 2;
  int32 y = 3;
  bool is_busy = 4;
  string asteroid_id = 5;
}

message AttackAsteroidRequest {
  string ship_id = 1;
  string asteroid_id = 2;
}

message AttackAsteroidResponse {
  bool success = 1;
  string message = 2;
}
